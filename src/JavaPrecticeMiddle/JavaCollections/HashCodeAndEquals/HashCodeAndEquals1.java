package JavaPrecticeMiddle.JavaCollections.HashCodeAndEquals;

public class HashCodeAndEquals1 {
    public static void main(String[] args){
        //почему при сравнении объектов нельзя ограничиться только методом equals? почему он идет в сочетании с методом hashCode?
        //метод hashCode ускоряет сравнение. метод equals работает медленно, т.к. ему нужно пройтись по всем полям объекта и сравнить их, а это происходит не быстро
        //в сочетании же с hashCode'ом при сравнении будет сначала вызываться метод hasCode: если метод отработал правильно, то сравнение сразу прекращается, если неправильно - то вызывается equals
        //почему тогда вообще нужен equals? потому-что hashCode не всегда правильно работает (когда разные объекты имеют одинаковые хэши) и equals является подстраховкой
        //когда разные объекты имеют одинаковые хэши - это называется коллизией. кол-во разных хеш-кодов ограничено
        //совместная работа пары методов hashCode и equals называется контрактом hashCode() equals()

        //хэширование - преобразование массива входных данных произвольной длины  в выходную битовую строку(числа) фиксированной длины при помощи функции хэширования (метод hashCode)
        //делаем это потому, что сравнивать числа намного проще чем объекты(в них сравниваются все поля)
    }
}
